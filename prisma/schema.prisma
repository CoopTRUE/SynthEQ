// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("MYSQL_URL")
}

model User {
  address          String        @id
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  signature        String        @unique
  logins           Login[]
  transactions     Transaction[]
  buyerPositions   Position[]    @relation("buyer")
  shorterPositions Position[]    @relation("shorter")
}

model Login {
  id          String   @id @default(cuid())
  timestamp   DateTime @default(now())
  ip          String
  user        User     @relation(fields: [userAddress], references: [address])
  userAddress String
}

model Position {
  id          String    @id @default(cuid())
  createdAt   DateTime  @default(now())
  activated   Boolean   @default(false)
  activatedAt DateTime?

  ticker             String // Ticker of stock. Ex: QQQ (Nasdaq 100 ETF)
  value              Float // Value of stock at position creation. Ex: 3000 ($3000 dollars)
  expiration         DateTime // When the position expires
  upside             Float // Max upside
  sharesAtActivation Float? // The amount of shares `value` is worth when a shorter activates

  buyer          User          @relation("buyer", fields: [buyerAddress], references: [address])
  buyerAddress   String
  shorter        User?         @relation("shorter", fields: [shorterAddress], references: [address])
  shorterAddress String?
  transactions   Transaction[]

  completed         Boolean   @default(false)
  valueAtCompletion Float?
  completedAt       DateTime?
}

model Transaction {
  txnHash   String   @id
  createdAt DateTime @default(now())
  chainId   Int
  token     String
  value     Float

  user        User     @relation(fields: [userAddress], references: [address])
  userAddress String
  Position    Position @relation(fields: [positionId], references: [id])
  positionId  String

  isCreationPayment Boolean
}
